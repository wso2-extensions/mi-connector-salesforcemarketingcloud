{
  "info": {
    "description": "This is a collection of 170+ requests for the following Salesforce Marketing Cloud APIs:\n\n**REST**\n<table>\n   <tr>\n      <td>\n         <ul>\n            <li>Address</li>\n            <li>Assets (Content Builder)</li>\n            <li>Audit</li>\n            <li>Contacts</li>\n            <li>Data Events</li>\n            <li>Event Notification</li>\n         </ul>\n      </td>\n      <td>\n         <ul>\n            <li>Interactions (Journey Builder)</li>\n            <li>Push</li>\n            <li>SMS</li>\n            <li>Transactional Messaging</li>\n            <li>Messaging</li>\n         </ul>\n      </td>\n   </tr>\n</table>\n\n**SOAP**\n<table>\n   <tr>\n      <td>\n         <ul>\n            <li>Data Extensions</li>\n            <li>Automations</li>\n            <li>Subscriber</li>\n            <li>Users</li>\n            <li>Admin</li>\n         </ul>\n      </td>\n   </tr>\n</table>\n\n**\u26a0\ufe0f  Disclaimers:**\n- This collection is provided as-is. It's not officially supported by Salesforce or covered by SLAs.\n- API documentation is not provided with the collection. Please refer to the [official documentation](https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/index-api.htm).\n- To help us better understand usage of the collection, we leverage Google Analytics. If you would like to opt out of the tracking, you can remove the Pre-request Script set at the collection level.\n\n\u2139\ufe0f Report issues and ask questions [here](https://github.com/salesforce-marketingcloud/postman/issues).\n\n## Get started\n\nFollow [this documentation](https://github.com/salesforce-marketingcloud/postman) to get started with the collection.\n\n## Variables Reference\n\nThe collection relies on the following variables:\n\n|Variable|Example Value|Description|\n|-|-|-|\n|et_subdomain|28yte38jw4un5rkoky2w6|Tenant specific subdomain Authentication Base URI value. **Only include the subdomain.**|\n|et_clientId|kx2xo6o2updxf2anwquyg|Client Id|\n|et_clientSecret|gj38398t7g89nbqn58gtp|Client Secret|\n|et_mid|14618743|MID of business unit|",
    "title": "Salesforce Marketing Cloud APIs",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "messaging/v1/email/messages/{messageKey}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSendStatusForRecipient.htm\n\nGets the send status for a message. Because this route is rate-limited, use it for infrequent verification of a messageKey. To collect send status at scale, subscribe to transactional send events using the Event Notification Service.",
        "parameters": [
          {
            "in": "path",
            "name": "messageKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Get Message Send Status for Recipient",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/address/v1/validateEmail": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/validateEmail.htm\n\nValidates an email by specifying the email address and validators to be used in the request body of the HTTP POST. You can use more than one validator in the same call.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "help@example.com",
                  "validators": [
                    "SyntaxValidator",
                    "MXValidator",
                    "ListDetectiveValidator"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Validate Address",
        "tags": [
          "Messaging & Journeys > REST > Address"
        ]
      }
    },
    "/asset/v1/content/assets": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/assetSimpleQuery.htm\n\nGets an asset collection by simple $filter parameters.",
        "parameters": [
          {
            "example": "1",
            "in": "query",
            "name": "$page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "10",
            "in": "query",
            "name": "$pagesize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "name asc",
            "in": "query",
            "name": "$orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "assetType.name=png",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "id,customerKey,fileProperties",
            "in": "query",
            "name": "$fields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Simple Query - With Filter",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/content-api.htm\n\nhttps://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/base-asset-types.htm\n\nInserts an asset.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "assetType": {
                    "id": 208,
                    "name": "htmlemail"
                  },
                  "channels": {
                    "email": true,
                    "web": false
                  },
                  "name": "Postman Demo - HTML Email",
                  "views": {
                    "html": {
                      "content": "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <style type=\"text/css\">\r\n        div,\r\n        p,\r\n        a,\r\n        li,\r\n        td {\r\n            -webkit-text-size-adjust: none;\r\n        }\r\n        \r\n        body {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n        \r\n        td[class=\"headercell-phone\"] {\r\n            display: none;\r\n        }\r\n        \r\n        @media screen and (max-width: 480px) {\r\n            table[class=\"tmp--container\"] {\r\n                width: 360px !important;\r\n            }\r\n            table[class=\"tmp--container-padding\"] {\r\n                width: 360px !important;\r\n                padding: 20px !important;\r\n            }\r\n            table[class=\"tmp--container-padding-top\"] {\r\n                width: 360px !important;\r\n                padding: 20px 0 0 0 !important;\r\n            }\r\n            table[class=\"tmp--container-padding-bottom\"] {\r\n                width: 360px !important;\r\n                padding: 0 0 20px 0 !important;\r\n            }\r\n            table[class=\"hero\"] {\r\n                width: 100% !important;\r\n            }\r\n            table[class=\"tmp--full-width\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width-padding-bottom\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 0 25px 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width-center\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 10px 0 10px 0 !important;\r\n                text-align: center !important;\r\n            }\r\n            table[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            tr[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            td[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            td[class=\"col-padding-bottom\"] {\r\n                padding: 0 0 25px 0 !important;\r\n            }\r\n            img[class=\"photo\"] {\r\n                width: 100% !important;\r\n                height: auto !important;\r\n            }\r\n            td[class=\"row\"] {\r\n                width: 100% !important;\r\n            }\r\n            td[class=\"tmp--hide\"] {\r\n                display: none !important;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<!-- background color -->\r\n\r\n<body bgcolor=\"#ffffff\">\r\n\r\n    <!-- background color -->\r\n    <table bgcolor=\"#ffffff\" width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <tr>\r\n            <td>\r\n                <!-- logo content area-->\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n                    <tr>\r\n                        <td width='100%' style='padding:20px 25px 20px 25px;'>\r\n                            <center><img width='250' id='style-header-logo' src='https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-logo-header-gray-2x.png'></center>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- end content area -->\r\n\r\n\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell2\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell3\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell4\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell5\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell6\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell7\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n\r\n\r\n                <!-- footer content area -->\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n\r\n                    <tr>\r\n                        <td class='tmp--full-width-center' width='100%' align='center' style='padding:25px 20px 0 20px;'><img width='50' id='style-footer-logo' src='https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-logo-footer-gray-2x.png'></td>\r\n                    </tr>\r\n                </table>\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n                    <tr>\r\n                        <td style='color:#ffffff;font-family:Gotham, Arial, sans-serif;font-size:11px;font-style:normal;font-weight:normal;padding:20px 20px 10px 20px;' class='tmp--full-width-center' width='100%' align='center' width='432'><a href=\"%%view_email_url%%\" alias=\"Web Version\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">View as a Webpage</a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style='color:#ffffff;font-family:Gotham, Arial, sans-serif;font-size:11px;font-style:normal;font-weight:normal;padding:10px 20px 20px 20px;' class='tmp--full-width-center' width='100%' align='center' width='432'>%%Member_Busname%%\r\n                            <br />%%Member_Addr%% %%Member_City%%, %%Member_State%%, %%Member_PostalCode%%, %%Member_Country%%.\r\n                            <br />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"font-family:Gotham, Helvetica, Arial, sans-serif; text-align:center; color:#ffffff; font-size:11px; font-weight:bold; line-height:14px; padding:0 25px 15px 25px;\">\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-website-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-facebook-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-twitter-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-instagram-white.png\" style=\"padding:0px 5px;\" />\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' border='0' align='center' cellpadding='0' cellspacing='0'>\r\n                    <tr>\r\n                        <td style=\"font-family:Gotham, Helvetica, Arial, sans-serif;text-align:center;color:#ffffff;font-size:11px;font-style:normal;font-weight:normal;line-height:14px;padding:0 25px 35px 25px;\">\r\n                            <a href=\"%%profile_center_url%%\" alias=\"Profile Center\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">Profile Center</a> <span style=\"color:#aa95d1; padding:0 5px;\">|</span>\r\n                            <a href=\"%%subscription_center_url%%\" alias=\"Manage Subscriptions\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">Manage Subscriptions\r\n                  </a> <span style=\"color:#aa95d1; padding:0 5px;\">|</span>\r\n                            <a target=\"_blank\" href=\"%%unsub_center_url%%\" alias=\"Unsubscribe\" title=\"Unsubscribe\" style=\"color:#ffffff;text-decoration:none;\">Unsubscribe\r\n                  </a>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- end content area -->\r\n\r\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n\r\n    <div id=\"tracking_pixel\">\r\n        <custom name=\"opencounter\" type=\"tracking\">\r\n    </div>\r\n    <div id=\"campaign_pixel\">\r\n    </div>\r\n</body>\r\n\r\n</html>"
                    },
                    "preheader": {
                      "content": "and this is my preheader"
                    },
                    "subjectline": {
                      "content": "%%First_Name%% this is my subject line"
                    },
                    "text": {}
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Asset - HTML Email",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Content"
        ]
      }
    },
    "/asset/v1/content/assets/<assetId>": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/routes.htm#detail_deleteAsset\n\nDeletes a category by ID.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Asset - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Content"
        ]
      },
      "patch": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/content-api.htm\n\nhttps://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/base-asset-types.htm\n\nUpdates part of an asset.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "assetType": {
                    "id": 208,
                    "name": "htmlemail"
                  },
                  "channels": {
                    "email": true,
                    "web": false
                  },
                  "name": "Postman Demo",
                  "views": {
                    "html": {
                      "content": "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <style type=\"text/css\">\r\n        div,\r\n        p,\r\n        a,\r\n        li,\r\n        td {\r\n            -webkit-text-size-adjust: none;\r\n        }\r\n        \r\n        body {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n        \r\n        td[class=\"headercell-phone\"] {\r\n            display: none;\r\n        }\r\n        \r\n        @media screen and (max-width: 480px) {\r\n            table[class=\"tmp--container\"] {\r\n                width: 360px !important;\r\n            }\r\n            table[class=\"tmp--container-padding\"] {\r\n                width: 360px !important;\r\n                padding: 20px !important;\r\n            }\r\n            table[class=\"tmp--container-padding-top\"] {\r\n                width: 360px !important;\r\n                padding: 20px 0 0 0 !important;\r\n            }\r\n            table[class=\"tmp--container-padding-bottom\"] {\r\n                width: 360px !important;\r\n                padding: 0 0 20px 0 !important;\r\n            }\r\n            table[class=\"hero\"] {\r\n                width: 100% !important;\r\n            }\r\n            table[class=\"tmp--full-width\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width-padding-bottom\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 0 0 25px 0 !important;\r\n            }\r\n            td[class=\"tmp--full-width-center\"] {\r\n                width: 100% !important;\r\n                float: left !important;\r\n                padding: 10px 0 10px 0 !important;\r\n                text-align: center !important;\r\n            }\r\n            table[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            tr[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            td[class=\"wrapper-padding\"] {\r\n                padding: 20px !important;\r\n            }\r\n            td[class=\"col-padding-bottom\"] {\r\n                padding: 0 0 25px 0 !important;\r\n            }\r\n            img[class=\"photo\"] {\r\n                width: 100% !important;\r\n                height: auto !important;\r\n            }\r\n            td[class=\"row\"] {\r\n                width: 100% !important;\r\n            }\r\n            td[class=\"tmp--hide\"] {\r\n                display: none !important;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<!-- background color -->\r\n\r\n<body bgcolor=\"#ffffff\">\r\n\r\n    <!-- background color -->\r\n    <table bgcolor=\"#ffffff\" width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <tr>\r\n            <td>\r\n                <!-- logo content area-->\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n                    <tr>\r\n                        <td width='100%' style='padding:20px 25px 20px 25px;'>\r\n                            <center><img width='250' id='style-header-logo' src='https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-logo-header-gray-2x.png'></center>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- end content area -->\r\n\r\n\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell2\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell3\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell4\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell5\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell6\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n                <!-- content area -->\r\n                <div data-type=\"slot\" data-key=\"cell7\"></div>\r\n                <!-- end content area -->\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td>\r\n\r\n\r\n                <!-- footer content area -->\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n\r\n                    <tr>\r\n                        <td class='tmp--full-width-center' width='100%' align='center' style='padding:25px 20px 0 20px;'><img width='50' id='style-footer-logo' src='https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-logo-footer-gray-2x.png'></td>\r\n                    </tr>\r\n                </table>\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' align='center' border='0' cellspacing='0' cellpadding='0'>\r\n                    <tr>\r\n                        <td style='color:#ffffff;font-family:Gotham, Arial, sans-serif;font-size:11px;font-style:normal;font-weight:normal;padding:20px 20px 10px 20px;' class='tmp--full-width-center' width='100%' align='center' width='432'><a href=\"%%view_email_url%%\" alias=\"Web Version\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">View as a Webpage</a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style='color:#ffffff;font-family:Gotham, Arial, sans-serif;font-size:11px;font-style:normal;font-weight:normal;padding:10px 20px 20px 20px;' class='tmp--full-width-center' width='100%' align='center' width='432'>%%Member_Busname%%\r\n                            <br />%%Member_Addr%% %%Member_City%%, %%Member_State%%, %%Member_PostalCode%%, %%Member_Country%%.\r\n                            <br />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"font-family:Gotham, Helvetica, Arial, sans-serif; text-align:center; color:#ffffff; font-size:11px; font-weight:bold; line-height:14px; padding:0 25px 15px 25px;\">\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-website-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-facebook-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-twitter-white.png\" style=\"padding:0px 5px;\" />\r\n                            <img width=\"30\" src=\"https://s3-us-west-2.amazonaws.com/rd-industry-emails/healthcare-life-sciences/makana/branding-assets/email-templates/branding-MakanaHealth-social-icon-instagram-white.png\" style=\"padding:0px 5px;\" />\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <table style='background-color:#6c5e91;' class='tmp--container' width='600' border='0' align='center' cellpadding='0' cellspacing='0'>\r\n                    <tr>\r\n                        <td style=\"font-family:Gotham, Helvetica, Arial, sans-serif;text-align:center;color:#ffffff;font-size:11px;font-style:normal;font-weight:normal;line-height:14px;padding:0 25px 35px 25px;\">\r\n                            <a href=\"%%profile_center_url%%\" alias=\"Profile Center\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">Profile Center</a> <span style=\"color:#aa95d1; padding:0 5px;\">|</span>\r\n                            <a href=\"%%subscription_center_url%%\" alias=\"Manage Subscriptions\" target=\"_blank\" style=\"color:#ffffff;text-decoration:none;\">Manage Subscriptions\r\n                  </a> <span style=\"color:#aa95d1; padding:0 5px;\">|</span>\r\n                            <a target=\"_blank\" href=\"%%unsub_center_url%%\" alias=\"Unsubscribe\" title=\"Unsubscribe\" style=\"color:#ffffff;text-decoration:none;\">Unsubscribe\r\n                  </a>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- end content area -->\r\n\r\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n\r\n    <div id=\"tracking_pixel\">\r\n        <custom name=\"opencounter\" type=\"tracking\">\r\n    </div>\r\n    <div id=\"campaign_pixel\">\r\n    </div>\r\n</body>\r\n\r\n</html>"
                    },
                    "preheader": {
                      "content": "updated the preheader too!"
                    },
                    "subjectline": {
                      "content": "%%First_Name%% this is my updated subject line"
                    },
                    "text": {}
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Asset - HTML Email",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Content"
        ]
      }
    },
    "/asset/v1/content/assets/query": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/assetAdvancedQuery.htm\n\nA complex query is comprised of two or more simple queries joined with an AND or OR logical comparison operator. The simple queries are contained in a leftOperand JSON field and rightOperand JSON field. A third field, the logicalOperator, is used to compare the two operands. You can also embed queries inside other queries.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "fields": [
                    "enterpriseId",
                    "memberId",
                    "thumbnail",
                    "category",
                    "content",
                    "data"
                  ],
                  "page": {
                    "page": 1,
                    "pageSize": 50
                  },
                  "query": {
                    "leftOperand": {
                      "property": "createdDate",
                      "simpleOperator": "greaterThan",
                      "value": "2019-07-18T13:35:27.327-06:00"
                    },
                    "logicalOperator": "AND",
                    "rightOperand": {
                      "property": "assetType.name",
                      "simpleOperator": "equal",
                      "value": "png"
                    }
                  },
                  "sort": [
                    {
                      "direction": "ASC",
                      "property": "id"
                    }
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Advanced Query",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      }
    },
    "/asset/v1/content/assets/salutations": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm\n\nGets the default header and footer for an account.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Simple Query - Salutations",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      }
    },
    "/asset/v1/content/assets/{assetId}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm\n\nGets an asset by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Simple Query - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      }
    },
    "/asset/v1/content/assets/{assetId}/file": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm\n\nGets the binary file for an asset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Simple Query - Binary File",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      }
    },
    "/asset/v1/content/assets/{emailId}/salutations": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm\n\nGets the header and footer for an email.",
        "parameters": [
          {
            "in": "path",
            "name": "emailId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Simple Query - Salutations - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Query"
        ]
      }
    },
    "/asset/v1/content/categories": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getCategories.htm\n\nReturns one or more Content Builder categories that are owned by or reside in your MID. To request categories that have been shared with your MID, add a scope parameter to the call.",
        "parameters": [
          {
            "example": "1",
            "in": "query",
            "name": "$page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "10",
            "in": "query",
            "name": "$pagesize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "name desc",
            "in": "query",
            "name": "$orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "parentId eq 516016",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Categories (Folder) - With Filter",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createCategory.htm\n\nCreates a category (folder) in Content Builder.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "Name": "Shared Pictures",
                  "ParentId": 1003303,
                  "SharingProperties": {
                    "SharedWith": [
                      1472123
                    ],
                    "SharingType": "edit"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Category (Folder) - Shared",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
        ]
      }
    },
    "/asset/v1/content/categories/{categoryId}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteCategory.htm\n\nDeletes one Content Builder category by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Category (Folder) - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getCategory.htm\n\nReturns one Content Builder category by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Categories (Folder) - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/updateCategory.htm\n\nUpdates one Content Builder category by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "CategoryType": "asset",
                  "EnterpriseId": 1447640,
                  "Id": 1003306,
                  "MemberId": 1447640,
                  "Name": "Updated Folder Name",
                  "ParentId": 858661
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Category (Folder) - By ID",
        "tags": [
          "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
        ]
      }
    },
    "/contacts/v1/addresses/email/search": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/retrieveContactKey.htm\n\nRetrieves the contact key for one or more email channel addresses.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "ChannelAddressList": [
                    "aaron.cates@salesforce.com"
                  ],
                  "MaximumCount": 5
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Contact Key For Email Address",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/attributeGroups": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/routes.htm",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Attribute Groups",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/contacts": {
      "patch": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/updateContacts.htm\n\nUpdates contacts with the specified information in the specified attribute groups.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "attributeSets": [
                    {
                      "items": [
                        {
                          "values": [
                            {
                              "name": "Email Address",
                              "value": "aaron.cates+updated@salesforce.com"
                            },
                            {
                              "name": "HTML Enabled",
                              "value": true
                            }
                          ]
                        }
                      ],
                      "name": "Email Addresses"
                    },
                    {
                      "items": [
                        {
                          "values": [
                            {
                              "name": "Last Name",
                              "value": "Cates"
                            },
                            {
                              "name": "First Name",
                              "value": "Aaron2"
                            },
                            {
                              "name": "Country",
                              "value": "United States"
                            },
                            {
                              "name": "Preferred Store",
                              "value": "San Francisco"
                            }
                          ]
                        }
                      ],
                      "name": "Email Demographics"
                    }
                  ],
                  "contactKey": "postmandemo1"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Contacts",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createContacts.htm\n\nCreates a new contact with the specified information in the specified attribute groups.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "attributeSets": [
                    {
                      "items": [
                        {
                          "values": [
                            {
                              "name": "Email Address",
                              "value": "aaron.cates@salesforce.com"
                            },
                            {
                              "name": "HTML Enabled",
                              "value": true
                            }
                          ]
                        }
                      ],
                      "name": "Email Addresses"
                    },
                    {
                      "items": [
                        {
                          "values": [
                            {
                              "name": "Last Name",
                              "value": "Cates"
                            },
                            {
                              "name": "First Name",
                              "value": "Aaron"
                            },
                            {
                              "name": "Country",
                              "value": "United States"
                            },
                            {
                              "name": "Preferred Store",
                              "value": "San Francisco"
                            }
                          ]
                        }
                      ],
                      "name": "Email Demographics"
                    }
                  ],
                  "contactKey": "postmandemo1"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Contacts",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/contacts/actions/delete": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/DeleteByContactKeys.htm\n\nDeletes contacts based on specified contact key values. This operation runs asynchronously. Use the OperationID value returned to check the status of the delete.",
        "parameters": [
          {
            "example": "keys",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "DeleteOperationType": "ContactAndAttributes",
                  "values": [
                    "postmandemo2"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Contact - By Key",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/contacts/analytics/deleterequests": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/ContactsDeleteRequestsDetails.htm\n\nRetrieves details of contact delete requests for a date range.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Contact Delete Request Details",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/contacts/analytics/deleterequests/summary": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/ContactsDeleteRequestsSummary.htm\n\nRetrieves a summary of contact delete requests for a date range.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Contact Delete Request Summary",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/contacts/v1/schema": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/schemasCollection.htm\n\nRetrieves the collection of all contact data schemas contained in the current account.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Schemas Collection",
        "tags": [
          "Messaging & Journeys > REST > Contacts"
        ]
      }
    },
    "/data/v1/async/import": {
      "post": {
        "description": "[https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Queue+and+start+a+one-time+data+import](https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Queue%2Band%2Bstart%2Ba%2Bone-time%2Bdata%2Bimport)\n\nQueue and start a one-time import against a data extension without creating an import definition.\n\nNote: If the file is on enhanced FTP, it will be removed once import finishes.\n\nFor testing purpose, it's advised to try with enhanced ftp file import first and then adapt other part by yourself.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "mapping": {
                    "allowErrors": true,
                    "fieldMappingType": "InferFromColumnHeadings"
                  },
                  "source": {
                    "fileInfo": {
                      "contentType": "CSV",
                      "specifier": "{File_Name}",
                      "standardQuotedStrings": true
                    }
                  },
                  "target": {
                    "key": "{DE_Key}",
                    "type": "DataExtension",
                    "updateType": "Overwrite"
                  },
                  "transport": {
                    "key": "{File_Location_Key}"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Queue DE One Time File Import",
        "tags": [
          "Messaging & Journeys > REST > Data"
        ]
      }
    },
    "/data/v1/async/import/{id}/summary": {
      "get": {
        "description": "[https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get+status+of+a+one-time+data+import](https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get%2Bstatus%2Bof%2Ba%2Bone-time%2Bdata%2Bimport)\n\nGet the status of a queued data import by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get File Import Status",
        "tags": [
          "Messaging & Journeys > REST > Data"
        ]
      }
    },
    "/data/v1/async/import/{id}/validationresult": {
      "get": {
        "description": "[https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get+validation+details+of+a+one-time+data+import](https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get%2Bvalidation%2Bdetails%2Bof%2Ba%2Bone-time%2Bdata%2Bimport)\n\nGet import row level validation details by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get File Import Validation Detail",
        "tags": [
          "Messaging & Journeys > REST > Data"
        ]
      }
    },
    "/data/v1/async/import/{id}/validationsummary": {
      "get": {
        "description": "[https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get+validation+summary+of+a+one-time+data+import](https://developer.salesforce.com/docs/marketing/marketing-cloud/references/mc-import_job_api?meta=Get%2Bvalidation%2Bsummary%2Bof%2Ba%2Bone-time%2Bdata%2Bimport)\n\nGet validation summary of a data import by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get File Import Validation Summary",
        "tags": [
          "Messaging & Journeys > REST > Data"
        ]
      }
    },
    "/data/v1/audit/auditEvents": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getAuditEvents.htm\n\nRetrieves logged Audit Trail audit events for the current account and its children. Logins are audited at the enterprise level.",
        "parameters": [
          {
            "example": "createdDate desc",
            "in": "query",
            "name": "$orderBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Audit Events",
        "tags": [
          "Messaging & Journeys > REST > Audit"
        ]
      }
    },
    "/data/v1/audit/securityEvents": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSecurityEvents.htm\n\nRetrieves logged Audit Trail security events for the authenticated user\u2019s account and its children. Logins are audited at the enterprise level.",
        "parameters": [
          {
            "example": "100",
            "in": "query",
            "name": "$pagesize",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "1",
            "in": "query",
            "name": "$page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "example": "createdDate desc",
            "in": "query",
            "name": "$orderBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Security Events",
        "tags": [
          "Messaging & Journeys > REST > Audit"
        ]
      }
    },
    "/hub/v1/dataevents/key:key:{DE_External_Key}/rows/Email:example@example.com": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putDataExtensionRowByKey.htm\n\nUpserts a data extension row by primary key using Data Extension's External Key.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "values": {
                    "FirstName": "John",
                    "FollowerCount": 4,
                    "IsActive": true,
                    "LastLogin": "2013-05-23T14:32:00Z",
                    "LastName": "Smith"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row by Key - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataevents/key:{DE_External_Key}/rows/Email:someone@exacttarget.com/column/FollowerCount/increment": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putIncrementColumnValueByKey.htm\n\nThe API increments a numeric column in a single synchronous call using Data Extension's External Key.",
        "parameters": [
          {
            "example": "10",
            "in": "query",
            "name": "step",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Increment Column - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataevents/key:{DE_External_Key}/rowset": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postDataExtensionRowsetByKey.htm\n\nThe API upserts multiple data extension rows in a single synchronous call using Data Extension's External Key.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f230288ba735091"
                    },
                    "values": {
                      "FirstName": "John",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  },
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f380288ba5091"
                    },
                    "values": {
                      "FirstName": "Jane",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row Set - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataevents/{DE_ID}/rows/Email:example@example.com": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putDataExtensionRowByKey.htm\n\nUpserts a data extension row by primary key using Data Extension ID.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "values": {
                    "FirstName": "John",
                    "FollowerCount": 2,
                    "IsActive": true,
                    "LastLogin": "2013-05-23T14:32:00Z",
                    "LastName": "Smith"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row by Key - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataevents/{DE_ID}/rows/Email:someone@exacttarget.com/column/FollowerCount/increment": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putIncrementColumnValueByKey.htm\n\nThe API increments a numeric column in a single synchronous call using Data Extension ID.",
        "parameters": [
          {
            "example": "10",
            "in": "query",
            "name": "step",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Increment Column - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataevents/{DE_ID}/rowset": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postDataExtensionRowsetByKey.htm\n\nThe API upserts multiple data extension rows in a single synchronous call using Data Extension ID.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f230288ba735091"
                    },
                    "values": {
                      "FirstName": "John",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  },
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f380288ba5091"
                    },
                    "values": {
                      "FirstName": "Jane",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row Set - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Synchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/key:{DE_External_Key}/rows/Email:example@example.com": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putDataExtensionRowByKey.htm\n\nUpserts a data extension row by primary key using Data Extension's External Key.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "values": {
                    "FirstName": "John",
                    "FollowerCount": 2,
                    "IsActive": true,
                    "LastLogin": "2013-05-23T14:32:00Z",
                    "LastName": "Smith"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row by Key - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/key:{DE_External_Key}/rows/Email:someone@exacttarget.com/column/FollowerCount/increment": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putIncrementColumnValueByKey.htm\n\nThe API increments a numeric column in a single Asynchronous call using Data Extension's External Key.",
        "parameters": [
          {
            "example": "5",
            "in": "query",
            "name": "step",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Increment Column - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/key:{DE_External_Key}/rowset": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postDataExtensionRowsetByKey.htm\n\nThe API upserts a multiple data extension rows Asynchronously using Data Extension's External Key.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_External_Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f230288ba735091"
                    },
                    "values": {
                      "FirstName": "John",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  },
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f380288ba5091"
                    },
                    "values": {
                      "FirstName": "Jane",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row Set - DE Key",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/{DE_ID}/rows/Email:example@example.com": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putDataExtensionRowByKey.htm\n\nUpserts a data extension row by primary key using Data Extension ID.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "values": {
                    "FirstName": "John",
                    "FollowerCount": 2,
                    "IsActive": true,
                    "LastLogin": "2013-05-23T14:32:00Z",
                    "LastName": "Smith"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row by Key - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/{DE_ID}/rows/Email:someone@exacttarget.com/column/FollowerCount/increment": {
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/putIncrementColumnValueByKey.htm\n\nThe API increments a numeric column in a single Asynchronous call using Data Extension's ID.",
        "parameters": [
          {
            "example": "5",
            "in": "query",
            "name": "step",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Increment Column - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/hub/v1/dataeventsasync/{DE_ID}/rowset": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postDataExtensionRowsetByKey.htm\n\nThe API upserts a multiple data extension rows Asynchronously using Data Extension's ID.",
        "parameters": [
          {
            "in": "path",
            "name": "DE_ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f230288ba735091"
                    },
                    "values": {
                      "FirstName": "John",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  },
                  {
                    "keys": {
                      "SubscriberKey": "5c68f5c7f380288ba5091"
                    },
                    "values": {
                      "FirstName": "Jane",
                      "FollowerCount": 2,
                      "IsActive": true,
                      "LastLogin": "2018-05-23T14:32:00Z",
                      "LastName": "Smith"
                    }
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Upsert Row Set - DE ID",
        "tags": [
          "Messaging & Journeys > REST > Data Events > Asynchronous"
        ]
      }
    },
    "/interaction/v1/eventDefinitions": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nRetrieves a collection of event definitions.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Event Definitions",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/createEventDefinition.htm\n\nCreates an event definition (name and data schema for an event) and defines an event definition key. The resource uses this key when firing an event to send it to the appropriate journey. Typically, marketers create the event definition in the Journey Builder UI. Use this resource instead if you are using a custom application for Journey Builder functionality.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "category": "Event",
                  "dataExtensionId": "E33174B2-FA07-4080-8903-690955ABFCEA",
                  "description": "New event definition via API",
                  "eventDefinitionKey": "NeweventviaAPI",
                  "iconUrl": "/events/images/icon_journeyBuilder-event-api-blue.svg",
                  "isVisibleInPicker": true,
                  "mode": "Production",
                  "name": "Postman Demo",
                  "type": "APIEvent"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Event Definition",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      }
    },
    "/interaction/v1/eventDefinitions/key:{eventDefinitionKey}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nDeletes an individual event definition by key.",
        "parameters": [
          {
            "in": "path",
            "name": "eventDefinitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Event Definition - By Key",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nRetrieves an individual event definition by key.",
        "parameters": [
          {
            "in": "path",
            "name": "eventDefinitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Event Definitions - By Key",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nUpdates an event definition by key. Once an event definition is created, only a few properties can be updated.",
        "parameters": [
          {
            "in": "path",
            "name": "eventDefinitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "category": "Event",
                  "dataExtensionId": "E33174B2-FA07-4080-8903-690955ABFCEA",
                  "description": "New event definition via API",
                  "eventDefinitionKey": "NeweventviaAPI",
                  "iconUrl": "/events/images/icon_journeyBuilder-event-api-blue.svg",
                  "isVisibleInPicker": true,
                  "mode": "Production",
                  "name": "Updated Postman Demo",
                  "type": "APIEvent"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Event Definition - By Key",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      }
    },
    "/interaction/v1/eventDefinitions/{eventDefinitionId}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nDeletes an individual event definition by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "eventDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Event Definition - By ID",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nUpdates an event definition by ID. Once an event definition is created, only a few properties can be updated.",
        "parameters": [
          {
            "in": "path",
            "name": "eventDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "category": "Event",
                  "dataExtensionId": "E33174B2-FA07-4080-8903-690955ABFCEA",
                  "description": "New event definition via API",
                  "eventDefinitionKey": "NeweventviaAPI",
                  "iconUrl": "/events/images/icon_journeyBuilder-event-api-blue.svg",
                  "isVisibleInPicker": true,
                  "mode": "Production",
                  "name": "Updated Postman Demo",
                  "type": "APIEvent"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Event Definition - By ID",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
        ]
      }
    },
    "/interaction/v1/events": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postEvent.htm\n\nFires the entry event that initiates the journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "ContactKey": "DD301",
                  "Data": {
                    "Email": "aaron.cates@salesforce.com",
                    "First_Name": "Aaron",
                    "Last_Name": "Cates",
                    "SubscriberKey": "DD301"
                  },
                  "EventDefinitionKey": "APIEvent-0dbe46de-74f9-a309-7778-298c0a565f93"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Fire Entry Event",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/interactions": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nRetrieves a collection of all journeys. The journey collection resources are embedded in the items property of the response body. Use both a sort order and paging to minimize the response size and response time.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Interactions (Journeys)",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postCreateInteraction.htm\n\nCreates or saves a journey. To create a new journey provide the request body in the appropriate Journey Specification. Please read the Journey Spec page to understand which properties are required to create a journey via the API. The id, key, createdDate, modifiedDate, status and definitionId are assigned by Journey Builder and are never to be passed in as parameters for creating a journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "activities": [
                    {
                      "arguments": {},
                      "configurationArguments": {
                        "applicationExtensionKey": "jb-email-activity",
                        "triggeredSend": {
                          "emailId": 182582,
                          "emailSubject": "Welcome to Makana",
                          "isMultipart": true,
                          "isSalesforceTracking": true,
                          "isSendLogging": true,
                          "isTrackingClicks": true,
                          "name": "Makana Welcome Email",
                          "sendClassificationId": "8da936da-9a40-e711-af11-78e3b50b7f0c",
                          "suppressTracking": false
                        }
                      },
                      "description": "",
                      "key": "postman-email-key-1",
                      "metaData": {
                        "isConfigured": true
                      },
                      "name": "Welcome Email",
                      "outcomes": [
                        {
                          "arguments": {},
                          "key": "sent-email-now-wait",
                          "metaData": {},
                          "next": "welcome-email-then-wait"
                        }
                      ],
                      "type": "EMAILV2"
                    },
                    {
                      "configurationArguments": {
                        "waitDuration": 1,
                        "waitUnit": "MINUTES"
                      },
                      "key": "welcome-email-then-wait",
                      "metaData": {
                        "isConfigured": true,
                        "waitType": "duration"
                      },
                      "name": "1 minute",
                      "type": "WAIT"
                    }
                  ],
                  "defaults": {
                    "email": [
                      "{{Event.APIEvent-0dbe46de-74f9-a309-7778-298c0a565f93.\"Email\"}}"
                    ]
                  },
                  "description": "Api created Journey",
                  "entryMode": "MultipleEntries",
                  "goals": [],
                  "key": "postman-demo",
                  "name": "Postman Demo",
                  "triggers": [
                    {
                      "arguments": {},
                      "configurationArguments": {
                        "criteria": ""
                      },
                      "description": "",
                      "key": "TRIGGER",
                      "metaData": {
                        "eventDefinitionId": "e35aa03b-4a75-47e5-a855-92fa07dce953",
                        "eventDefinitionKey": "APIEvent-0dbe46de-74f9-a309-7778-298c0a565f93"
                      },
                      "name": "api-event",
                      "outcomes": [],
                      "type": "APIEvent"
                    }
                  ],
                  "workflowApiVersion": 1
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Interaction (Journey) - Simple Journey",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/contactMembership": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/contactMembershipRequest.htm\n\nProvides a list of journeys and journey versions for a list of contact keys.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "ContactKeyList": [
                    "DD301",
                    "0036A000002FDbFQAW"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get List Of Journeys Contact Is In",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/interactions/contactexit": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/contactExitRequest.htm\n\nRemoves up to 50 contacts from a journey or from one or more versions of a journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "ContactKey": "DD301",
                    "DefinitionKey": "postman-demo1",
                    "Versions": [
                      2
                    ]
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Remove Contact From Journey",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/interactions/contactexit/status": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/contactExitStatus.htm\n\nReturns the status of a request to remove a contact from a journey or from one or more versions of a journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "ContactKey": "DD301",
                    "DefinitionKey": "postman-demo1",
                    "Versions": [
                      2
                    ]
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Contact Journey Exit Status",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/interactions/journeyhistory/download": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/contactMembershipRequest.htm\n\nProvides a list of journeys and journey versions for a list of contact keys.",
        "parameters": [
          {
            "example": "true",
            "in": "header",
            "name": "x-direct-pipe",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "example": "ActivityId,ContactKey",
            "in": "query",
            "name": "columns",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "definitionIds": [
                    "ef9d7dab-f130-4ca4-bed0-3f1ecb10bf3b"
                  ],
                  "end": "2023-08-11T21:00:00Z",
                  "start": "2022-04-11T06:00:00Z",
                  "statuses": [
                    "complete"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Download Journey History",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/interactions/publishAsync/{journeyId}": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postPublishInteractionById.htm\n\nPublishes a journey version asynchronously.",
        "parameters": [
          {
            "example": "{{versionNumber}}",
            "in": "query",
            "name": "versionNumber",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "journeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Publish Interaction (Journey)",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/publishStatus/{statusId}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getPublishStatus.htm\n\nChecks the status of a publication.",
        "parameters": [
          {
            "in": "path",
            "name": "statusId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Interaction (Journey) Publish Status",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/stop/{journeyId}": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postStopInteractionById.htm\n\nStops a running journey.",
        "parameters": [
          {
            "example": "{{versionNumber}}",
            "in": "query",
            "name": "versionNumber",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "journeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": "",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Stop Interaction (Journey)",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/{id}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/deleteInteractionById.htm\n\nDeletes a journey by ID. When deleting last version of a journey, check if the journey is associated with a tag and unassociated the tag using the deleteTags resource.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Interaction (Journey) - By ID",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/{journeyId}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nRetrieves a single journey by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "journeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Interactions (Journeys) - By ID",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
        ]
      }
    },
    "/interaction/v1/interactions/{journeyId}/audit/all": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getInteractionAuditLog.htm\n\nRetrieves an audit log of a journey and its versions by ID or key. Pass in different actions to see history about creating, modifying, activating, deactivating, stopping, and deleting a journey.",
        "parameters": [
          {
            "in": "path",
            "name": "journeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Interaction (Journey) Audit Log",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/interaction/v1/rest": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/jb-api-specification.htm\n\nRetrieves the discovery document for the collection of journey resources.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Discovery Document",
        "tags": [
          "Messaging & Journeys > REST > Interactions (Journey Builder)"
        ]
      }
    },
    "/messaging/v1/email/definitions": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getDefinitions.htm\n\nGets a list of send definitions.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Get a List of Definitions",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createSendDefinition.htm\n\nCreates a send definition.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "classification": "Default Transactional",
                  "content": {
                    "customerKey": "a128e1f4-0c53-4232-be79-7e2f9f13a7ce"
                  },
                  "definitionKey": "tapi-demo-postman",
                  "description": "Created via REST",
                  "name": "Postman Demo",
                  "options": {
                    "bcc": [
                      "bcc_address@example.com"
                    ],
                    "cc": [
                      "cc_address@example.com"
                    ],
                    "createJourney": true,
                    "trackLinks": true
                  },
                  "status": "Active",
                  "subscriptions": {
                    "autoAddSubscriber": true,
                    "dataExtension": "CF2F5C60-65C3-43E7-8ACD-AD68667F133C",
                    "list": "All Subscribers - 653241",
                    "updateSubscriber": false
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Create Send Definiton",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/email/definitions/{definitionKey}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteMessageDefinition.htm\n\nDeletes a message definition. You can't restore a deleted definition. The deleted definition is archived, and a delete location of the definition key is provided in the response for reference. You can reuse a deleted definition key because the information associated with it is copied to a new unique identifier.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Delete Message Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSendDefinition.htm\n\nGets send definition configuration details for a definition key.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Get Send Definition by Key",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      },
      "patch": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/updateMessageDefinition.htm\n\nUpdates a specific message definition.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "classification": "Default Transactional",
                  "content": {
                    "customerKey": "a128e1f4-0c53-4232-be79-7e2f9f13a7ce"
                  },
                  "description": "Updated Description",
                  "name": "Postman Demo - Updated Name",
                  "options": {
                    "trackLinks": true
                  },
                  "status": "Active",
                  "subscriptions": {
                    "autoAddSubscriber": true,
                    "dataExtension": "CF2F5C60-65C3-43E7-8ACD-AD68667F133C",
                    "list": "All Subscribers - 515987",
                    "updateSubscriber": false
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Update Message Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/email/definitions/{definitionKey}/queue": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getQueueMetricsForDefinition.htm\n\nGets metrics for the messages of a send definition. Applies to messages that are accepted but not yet processed.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Get Queue Metrics for a Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/email/messages": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/sendMessageMultipleRecipients.htm\n\nSends a message to multiple recipients using a send definition. You can provide a messageKey in the request; otherwise, the messageKey is automatically generated in the response.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "attributes": {
                    "GlobalAttribute1": "value_a",
                    "GlobalAttribute2": "value_b"
                  },
                  "definitionKey": "tapi-ena-appointment",
                  "recipients": [
                    {
                      "attributes": {
                        "Doctor": "Smith",
                        "FirstName": "Aaron"
                      },
                      "contactKey": "aaron.cates@salesforce.com",
                      "messageKey": "{{$guid}}",
                      "to": "aaron.cates@salesforce.com"
                    },
                    {
                      "attributes": {
                        "Doctor": "McNew",
                        "FirstName": "Billy"
                      },
                      "contactKey": "aaron.cates@salesforce.com",
                      "messageKey": "{{$guid}}",
                      "to": "aaron.cates@salesforce.com"
                    }
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Send a Message to Multiple Recipients",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/email/messages/": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getMessagesNotSent.htm\n\nGets a paginated list of messages that were not sent, ordered from oldest to newest.",
        "parameters": [
          {
            "example": "notSent",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Get List of Messages Not Sent to Recipients",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/email/messages/{guid}": {
      "parameters": [
        {
          "in": "path",
          "name": "guid",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/sendMessageSingleRecipient.htm\n\nSends a message to a single recipient via a send definition using a messageKey path parameter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "definitionKey": "tapi-ena-welcome",
                  "recipient": {
                    "attributes": {
                      "FirstName": "Aaron",
                      "Plan": "PPO"
                    },
                    "contactKey": "aaron.cates@salesforce.com",
                    "to": "aaron.cates@salesforce.com"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Email - Send a Message to a Single Recipient",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > Email"
        ]
      }
    },
    "/messaging/v1/messageDefinitionSends/key:<tsd_external_key>/deliveryRecords/<recipientSendId>": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/messageDefinitionSendsDeliveryRecords.htm\n\nGets the delivery details of an email sent using the MessageDefinitionSends.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Message Status",
        "tags": [
          "Messaging & Journeys > REST > Messaging"
        ]
      }
    },
    "/messaging/v1/messageDefinitionSends/key:<tsd_external_key>/send": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/messageDefinitionSends.htm\n\nSends transactional email using Marketing Cloud's triggered send functionality. In order to use this service, configure a triggered send definition in Email Studio.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "From": {
                    "Address": "me@salesforce.com",
                    "Name": "Learning Account"
                  },
                  "To": {
                    "Address": "help@example.com",
                    "ContactAttributes": {
                      "SubscriberAttributes": {
                        "Cart_Total": "27.84",
                        "First_Name": "Aaron",
                        "Order_Number": 123456,
                        "Purchase_Date": "2019-07-11T18:32:15Z",
                        "Sub_Total": "30.01",
                        "Tax": "2.17"
                      }
                    },
                    "SubscriberKey": "12356"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Send Email - Triggered Send Definition",
        "tags": [
          "Messaging & Journeys > REST > Messaging"
        ]
      }
    },
    "/messaging/v1/sms/definitions": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createSMSSendDefinition.htm\n\nCreates a send definition.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "content": {
                    "message": "My SMS Message Text"
                  },
                  "definitionKey": "tapi-sms-demo-postman",
                  "description": "Created via REST",
                  "name": "SMS Postman Demo",
                  "status": "Active",
                  "subscriptions": {
                    "autoAddSubscriber": true,
                    "countryCode": "US",
                    "keyword": "TXNSMS",
                    "shortCode": "59545"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Create Send Definiton",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/definitions/": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSMSDefinitions.htm\n\nGets a list of send definitions.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Get a List of Definitions",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/definitions/{definitionKey}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteSMSMessageDefinition.htm\n\nDeletes a message definition. You can't restore a deleted definition. The deleted definition is archived, and a delete location of the definition key is provided in the response for reference. You can reuse a deleted definition key because the information associated with it is copied to a new unique identifier.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Delete Message Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      },
      "patch": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/updateSMSMessageDefinition.htm\n\nUpdates a specific message definition.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "content": {
                    "message": "%%FirstName%% Here is your new password: %%password%%"
                  },
                  "description": "Updating Description...",
                  "name": "SMS Postman Demo",
                  "status": "Active",
                  "subscriptions": {
                    "autoAddSubscriber": true,
                    "countryCode": "US",
                    "keyword": "TXNSMS",
                    "shortCode": "59545"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Update Message Definiton",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/definitions/{definitionKey}/queue": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteQueuedSMSMessagesForDefinition.htm",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Delete Messages Queued for a Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSMSQueueMetricsForDefinition.htm\n\nGets metrics for the messages of a send definition. Applies to messages that are accepted but not yet processed.",
        "parameters": [
          {
            "in": "path",
            "name": "definitionKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Get Queue Metrics for a Definition",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/messages": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/sendSMSMessageMultipleRecipients.htm\n\nSends a message to multiple recipients using a send definition. You can provide a messageKey in the request; otherwise, the messageKey is automatically generated in the response.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "attributes": {
                    "CommonAttributeExample": "2"
                  },
                  "definitionKey": "tapi-sms-demo-postman",
                  "recipients": [
                    {
                      "attributes": {
                        "FirstName": "Aaron",
                        "Password": "1234567"
                      },
                      "contactKey": "DD301",
                      "messageKey": "{{$guid}}",
                      "to": "15559083119"
                    },
                    {
                      "attributes": {
                        "FirstName": "William",
                        "Password": "2345678"
                      },
                      "contactKey": "DD302",
                      "messageKey": "{{$guid}}",
                      "to": "15015553119"
                    }
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Send a Message to Multiple Recipients",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/messages/": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSMSMessagesNotSent.htm\n\nGets a paginated list of messages that were not sent, ordered from oldest to newest.",
        "parameters": [
          {
            "example": "notSent",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Get List of Messages Not Sent to Recipients",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/messages/{guid}": {
      "parameters": [
        {
          "in": "path",
          "name": "guid",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/sendSMSMessageSingleRecipient.htm\n\nSends a message to a single recipient via a send definition using a messageKey path parameter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "content": {
                    "message": "Override Text: %%FirstName%% Here is your new password: %%password%%"
                  },
                  "definitionKey": "tapi-sms-demo-postman",
                  "recipient": {
                    "attributes": {
                      "FirstName": "Aaron",
                      "password": "1234567890ab"
                    },
                    "contactKey": "DD301",
                    "to": "15015553119"
                  },
                  "subscriptions": {
                    "resubscribe": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Send a Message to a Single Recipient",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/messaging/v1/sms/messages/{messageKey}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSMSSendStatusForRecipient.htm\n\nGets the send status for a message. Because this route is rate-limited, use it for infrequent verification of a messageKey. To collect send status at scale, subscribe to transactional send events using the Event Notification Service.",
        "parameters": [
          {
            "in": "path",
            "name": "messageKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "SMS - Get Message Send Status for Recipient",
        "tags": [
          "Messaging & Journeys > REST > Transactional Messaging > SMS"
        ]
      }
    },
    "/platform/v1/ens-callbacks": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getAllCallbacks.htm\n\nRetrieves details about all registered callbacks.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get All Callbacks",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      },
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createCallback.htm\n\nRegisters a new callback to receive event notifications. Verify your callback before you can use it in a subscription.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "callbackName": "postman-demo",
                    "maxBatchSize": 1000,
                    "url": "https://webhook.site/6f2e0568-0ab4-4648-8ba9-6aaca5cf7b25"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/updateCallback.htm\n\nUpdates a registered callback. It can take up to two minutes for callback changes to become active.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "callbackId": "0ddf4895-c8f6-4b8b-8b31-32cfd62df35b",
                    "callbackName": "postman-demo-updated",
                    "maxBatchSize": 1000
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      }
    },
    "/platform/v1/ens-callbacks/{callbackId}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteCallback.htm\n\nDeletes a registered callback that isn't used by any subscriptions. Delete all subscriptions for the callback before deleting the callback.",
        "parameters": [
          {
            "in": "path",
            "name": "callbackId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getCallback.htm\n\nRetrieves details about a registered callback.",
        "parameters": [
          {
            "in": "path",
            "name": "callbackId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      }
    },
    "/platform/v1/ens-subscriptions": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/createSubscription.htm\n\nCreates a single subscription. A subscription indicates which event types to receive notifications for and which callback, or webhook, to receive them on. A new subscription can take up to two minutes to become active. You can create a subscription only for a verified callback.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "callbackId": "0ddf4895-c8f6-4b8b-8b31-32cfd62df35b",
                    "eventCategoryTypes": [
                      "TransactionalSendEvents.EmailNotSent",
                      "TransactionalSendEvents.EmailSent",
                      "TransactionalSendEvents.EmailBounced"
                    ],
                    "filters": [
                      "definitionKey=tapi-demo-postman"
                    ],
                    "subscriptionName": "postman-demo-subscription"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Subscription",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Subscriptions"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/updateSubscription.htm\n\nUpdates a single subscription. To pause an active subscription, set the status request parameter to paused. To unpause a paused subscription, set the status request parameter to active. Always supply a status reason in the request when you update the subscription status. Changes made to a subscription can take up to two minutes to become active.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": [
                  {
                    "eventCategoryTypes": [
                      "TransactionalSendEvents.EmailNotSent",
                      "TransactionalSendEvents.EmailSent",
                      "TransactionalSendEvents.EmailBounced"
                    ],
                    "filters": [
                      "definitionKey=tapi-demo-postman"
                    ],
                    "status": "paused",
                    "statusReason": "demo pause update",
                    "subscriptionId": "38977859-87c6-48ae-91c8-b292863bb054",
                    "subscriptionName": "postman-demo-subscription-updated"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Subscription",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Subscriptions"
        ]
      }
    },
    "/platform/v1/ens-subscriptions-by-cb/{callbackId}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getAllSubscriptionsForCallback.htm\n\nRetrieves details for all subscriptions associated with a callback.",
        "parameters": [
          {
            "in": "path",
            "name": "callbackId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get All Subscriptions for a Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Subscriptions"
        ]
      }
    },
    "/platform/v1/ens-subscriptions/{subscriptionId}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/deleteSubscription.htm\n\nDeletes a subscription.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Subscription",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Subscriptions"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/getSubscription.htm\n\nRetrieves details for a subscription.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Subscription",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Subscriptions"
        ]
      }
    },
    "/platform/v1/ens-verify": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/verifyCallback.htm\n\nVerifies a callback so that it can receive notifications.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "callbackId": "0ddf4895-c8f6-4b8b-8b31-32cfd62df35b",
                  "verificationKey": "xv8pMrf9bxsvKhqvXjRjSphEK2WfPmuq+VBhzQfntJs="
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Verify Callback",
        "tags": [
          "Messaging & Journeys > REST > Event Notification > Callback"
        ]
      }
    },
    "/push/v1/location": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "attributes": [
                    {
                      "attribute": "Address 1",
                      "value": "123 Elm St"
                    },
                    {
                      "attribute": "City",
                      "value": "Nowhere"
                    },
                    {
                      "attribute": "State",
                      "value": "CA"
                    },
                    {
                      "attribute": "Zip",
                      "value": "00000"
                    }
                  ],
                  "center": {
                    "latitude": 30.750362,
                    "longitude": -95.374712
                  },
                  "description": "Location at 123 Elm St, Nowhere, CA 00000",
                  "location": "Main Location on Elm Street",
                  "name": "API Location",
                  "radius": 50
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Location",
        "tags": [
          "Messaging & Journeys > REST > Push > Location"
        ]
      }
    },
    "/push/v1/location/": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getLocations.htm\n\nGets a list of all locations.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Retrieve All Locations",
        "tags": [
          "Messaging & Journeys > REST > Push > Location"
        ]
      }
    },
    "/push/v1/location/{et_location_id}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/deleteLocation.htm\n\nDeletes an existing location.",
        "parameters": [
          {
            "in": "path",
            "name": "et_location_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Location",
        "tags": [
          "Messaging & Journeys > REST > Push > Location"
        ]
      },
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getSpecificLocation.htm\n\nets a specific location.",
        "parameters": [
          {
            "in": "path",
            "name": "et_location_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Specific Location",
        "tags": [
          "Messaging & Journeys > REST > Push > Location"
        ]
      },
      "put": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/updateLocation.htm\n\nUpdates an existing location by ID.",
        "parameters": [
          {
            "in": "path",
            "name": "et_location_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "center": {
                    "latitude": 40.750362,
                    "longitude": -87.374712
                  },
                  "description": "Updated via the API!",
                  "location": "Custom Location",
                  "name": "Downtown Seattle",
                  "radius": 150
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Update Location",
        "tags": [
          "Messaging & Journeys > REST > Push > Location"
        ]
      }
    },
    "/push/v1/message": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/createPushMessage.htm\n\nCreates a push message template for sending to a list of subscribers or an audience inclusion list or data extension. You can personalize each message for each subscriber using personalization strings or AMPscript lookups from a data extension within a single push message definition. You can also pass the text of the message to override the message contents specified in the definition for API-driven personalization.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "alert": "Alert message created by API",
                  "application": {
                    "id": "702cda13-72e7-48b1-a99b-9b9028f7a695",
                    "name": "API App"
                  },
                  "badge": "+1",
                  "content-available": 1,
                  "contentType": 1,
                  "messageType": 1,
                  "name": "Message created by API",
                  "sendInitiator": 1,
                  "startDate": "2014-04-30T14:50:00Z",
                  "status": 2
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Push Message",
        "tags": [
          "Messaging & Journeys > REST > Push"
        ]
      }
    },
    "/push/v1/messageApp/{mobilepush_message_id}/send": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postMessageAppSend.htm\n\nBroadcasts a message to all users of a push-enabled app.",
        "parameters": [
          {
            "in": "path",
            "name": "mobilepush_message_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "Badge": "+1",
                  "CustomKeys": {
                    "keyA": "keyA_value",
                    "keyB": "keyB_value"
                  },
                  "CustomPayload": {
                    "customA": "customA_value"
                  },
                  "MessageText": "New information available!",
                  "OpenDirect": "OD01",
                  "Override": true,
                  "SendTime": "2012-10-31 09:00",
                  "Sound": "MyFile.caf",
                  "mutable-content": 1,
                  "subtitle": "Check your app to see what else is in store.",
                  "title": "Boost your winnings!"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Broadcast Message",
        "tags": [
          "Messaging & Journeys > REST > Push"
        ]
      }
    },
    "/push/v1/messageList/{mobilepush_message_id}/send": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postMessageListSend.htm\n\nSends a message to the specified mobile devices of a push-enabled app.",
        "parameters": [
          {
            "in": "path",
            "name": "mobilepush_message_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "Badge": "+1",
                  "CustomKeys": {
                    "keyA": "keyA_value",
                    "keyB": "keyB_value"
                  },
                  "CustomPayload": {
                    "customA": "customA_value"
                  },
                  "ExclusionListIds": [
                    "VWRoY1IzcWh2RXVvc3FDYTRfcGtvQTo2NTow"
                  ],
                  "InclusionListIds": [
                    "UTZ6QTh4MVRmMC1XZlN5QUtnS3hWdzo2NTow"
                  ],
                  "MessageText": "New information available!",
                  "OpenDirect": "OD01",
                  "Override": true,
                  "SendTime": "2012-10-31 09:00",
                  "Sound": "MyFile.caf",
                  "mutable-content": 1,
                  "subtitle": "Check your app to see what else is in store.",
                  "title": "Boost your winnings!"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Send Message to List",
        "tags": [
          "Messaging & Journeys > REST > Push"
        ]
      }
    },
    "/sms/v1/contacts/subscriptions": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/contactsSubscriptions.htm\n\nReturns subscription status for a mobile number or subscriber key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "mobileNumber": [
                    "12223334444"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Subscription Status",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/keyword": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/createKeyword.htm\n\nCreates a keyword on an account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "CountryCode": "US",
                  "Keyword": "API_KEYWORD_CREATE",
                  "ShortCode": "59545"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Keyword",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/keyword/{et_keyword_id}": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/deleteKeywordViaKeywordId.htm\n\nDeletes a keyword on an account given a keyword Id.",
        "parameters": [
          {
            "in": "path",
            "name": "et_keyword_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Keyword",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/keyword/{et_keyword}/{et_sms_shortcode}/US": {
      "delete": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/deleteKeywordViaKeywordShortCodeCountryCode.htm\n\nDeletes a keyword on an account given a keyword, short code, and country code.",
        "parameters": [
          {
            "in": "path",
            "name": "et_keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "et_sms_shortcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Delete Keyword by Shortcode",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/message/optin": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/messageOptIn.htm\n\nCreates an SMS opt-in message permitting contacts to subscribe to further SMS messages.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "countryCode": "US",
                  "doubleOptInValidResponses": "yes,y,yea,yeah,yep,sure",
                  "doubleOptinConfirmationMessage": "Thanks for subscribing! You will receive approx. 4 messages per month.",
                  "doubleOptinInitialMessage": "Thanks for subscribing! Please respond with your age to confirm your subscription.",
                  "duplicateOptInMessage": "You already subscribed to receive our messages",
                  "endDate": "1/1/2020",
                  "keyword": "API_EXAMPLE",
                  "messageName": "API Message Creation",
                  "messageOptInType": "Double",
                  "optInErrorMessage": "An error occurred. Please try again.",
                  "shortCode": "59545",
                  "startDate": "7/11/2019"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Create Opt-In Message",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/messageContact/{et_smsmsg_id}/history/{et_sms_tokenId}/mobileNumber/{mobile_number}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getMessageContactHistory.htm\n\nRetrieves the last message sent to a mobile number.",
        "parameters": [
          {
            "in": "path",
            "name": "et_smsmsg_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "et_sms_tokenId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "mobile_number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Message Contact History",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/messageContact/{sms_message_id}/send": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postMessageContactSend.htm\n\nInitiates a message to one or more mobile numbers.",
        "parameters": [
          {
            "in": "path",
            "name": "sms_message_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "Override": true,
                  "Resubscribe": true,
                  "Subscribe": true,
                  "keyword": "IMG",
                  "messageText": "Override!",
                  "mobileNumbers": [
                    "12223334444"
                  ]
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Post Message to Number",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/messageList/{et_smsmsg_id}/deliveries/{et_smstoken_id}": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getMessageList.htm\n\nReturns status for a message sent to a group of mobile numbers.",
        "parameters": [
          {
            "in": "path",
            "name": "et_smsmsg_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "et_smstoken_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Message List Status",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/sms/v1/queueMO": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/postQueueMO.htm\n\nQueues an MO message for send.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "messageText": "IMG",
                  "mobileNumbers": [
                    "12223335555"
                  ],
                  "shortCode": "59545"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "QueueMO Message",
        "tags": [
          "Messaging & Journeys > REST > SMS"
        ]
      }
    },
    "/v2/discovery": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getBaseURLs.htm\n\nGets tenant-specific REST and authentication base URIs for the Marketing Cloud tenant associated with the provided username and client ID.",
        "parameters": [
          {
            "example": "{{et_clientId}}",
            "in": "query",
            "name": "client_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "acct:{{userId}}",
            "in": "query",
            "name": "resource",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get Base URLs",
        "tags": [
          "Messaging & Journeys > REST > Auth"
        ]
      }
    },
    "/v2/token": {
      "post": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-app-development.meta/mc-app-development/access-token-s2s.htm\n\nWhen the access token expires, your application must request a new access token using the same v2/token route as before. The lifetime of an access token is 20 minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "account_id": "{{et_mid}}",
                  "client_id": "{{et_clientId}}",
                  "client_secret": "{{et_clientSecret}}",
                  "grant_type": "client_credentials"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Request SFMC Token",
        "tags": [
          "Messaging & Journeys > REST > Auth"
        ]
      }
    },
    "/v2/userinfo": {
      "get": {
        "description": "https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-apis.meta/mc-apis/getUserInfo.htm\n\nGets information for the account and user that are associated with the access token.",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          }
        },
        "summary": "Get User Info",
        "tags": [
          "Messaging & Journeys > REST > Auth"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://{{et_subdomain}}.auth.marketingcloudapis.com"
    },
    {
      "url": "https://{{et_subdomain}}.rest.marketingcloudapis.com"
    }
  ],
  "tags": [
    {
      "name": "Messaging & Journeys"
    },
    {
      "name": "Messaging & Journeys > REST"
    },
    {
      "name": "Messaging & Journeys > REST > Auth"
    },
    {
      "name": "Messaging & Journeys > REST > Address"
    },
    {
      "description": "https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/content-api.htm",
      "name": "Messaging & Journeys > REST > Assets (Content Builder)"
    },
    {
      "name": "Messaging & Journeys > REST > Assets (Content Builder) > Categories (Folders)"
    },
    {
      "name": "Messaging & Journeys > REST > Assets (Content Builder) > Query"
    },
    {
      "name": "Messaging & Journeys > REST > Assets (Content Builder) > Content"
    },
    {
      "name": "Messaging & Journeys > REST > Audit"
    },
    {
      "name": "Messaging & Journeys > REST > Contacts"
    },
    {
      "name": "Messaging & Journeys > REST > Data Events"
    },
    {
      "name": "Messaging & Journeys > REST > Data Events > Asynchronous"
    },
    {
      "name": "Messaging & Journeys > REST > Data Events > Synchronous"
    },
    {
      "name": "Messaging & Journeys > REST > Event Notification"
    },
    {
      "name": "Messaging & Journeys > REST > Event Notification > Callback"
    },
    {
      "name": "Messaging & Journeys > REST > Event Notification > Subscriptions"
    },
    {
      "name": "Messaging & Journeys > REST > Interactions (Journey Builder)"
    },
    {
      "name": "Messaging & Journeys > REST > Interactions (Journey Builder) > Event Definitions"
    },
    {
      "name": "Messaging & Journeys > REST > Interactions (Journey Builder) > Journeys"
    },
    {
      "name": "Messaging & Journeys > REST > Push"
    },
    {
      "name": "Messaging & Journeys > REST > Push > Location"
    },
    {
      "name": "Messaging & Journeys > REST > SMS"
    },
    {
      "name": "Messaging & Journeys > REST > Transactional Messaging"
    },
    {
      "name": "Messaging & Journeys > REST > Transactional Messaging > Email"
    },
    {
      "name": "Messaging & Journeys > REST > Transactional Messaging > SMS"
    },
    {
      "name": "Messaging & Journeys > REST > Messaging"
    },
    {
      "description": "[https://help.salesforce.com/s/articleView?id=sf.mc_rn_2024_spring_as_single_use_de_import.htm&amp;type=5](https://help.salesforce.com/s/articleView?id=sf.mc_rn_2024_spring_as_single_use_de_import.htm&type=5)\n\n# **Data Extension Imports**\n\nYou can use the Data Extension Import APIs to import data from various file transfer locations to a data extension, without creating an import definition.\n\nYou can import from pre-signed file sources such as, Amazon Web Service (AWS) and Microsoft Azure without configuring file transfer locations.",
      "name": "Messaging & Journeys > REST > Data"
    }
  ],
  "components": {}
}